Turbo Assembler	 Version 2.51	     10/17/19 10:43:09	    Page 1
pr5.ASM



      1	0000			     sseg    segment stack 'stack'
      2	0000  80*(??)			 db  128 dup(?)
      3	0080			     sseg    ends
      4
      5	0000			     dseg    segment 'data'
      6
      7
      8				     ; Input data
      9	0000  ????		     n		 dw ?
     10
     11				     ; % Private data %
     12	0002  6E 20 3D 20 24	     n_msg	 db 'n = $'
     13	0007  73 75 6D 20 3D 20	24   sum_msg	 db 'sum = $'
     14	000E  000A		     base	 dw 10
     15	0010  FFFF		     minus	 dw -1
     16	0012  10		     buffer_size db 16
     17	0013  00		     buffer_read db 0
     18	0014  10*(24)		     buffer	 db 16 dup('$')
     19
     20	0024			     dseg    ends
     21
     22	0000			     cseg    segment 'code'
     23					 assume	     cs:cseg, ds:dseg, ss:sseg
     24
     25				     ; =========================================================
     26				     ; Output text procedure
     27				     ; =========================================================
     28	0000			     output_text:
     29	0000  B4 09			 mov ah, 09h
     30	0002  CD 21			     int     21h
     31	0004  C3			 ret
     32
     33				     ; =========================================================
     34				     ; Output character	procedure
     35				     ; =========================================================
     36	0005			     output_character:
     37	0005  B4 02			 mov ah, 02h
     38	0007  CD 21			 int 21h
     39	0009  C3			 ret
     40
     41				     ; =========================================================
     42				     ; Output number procedure
     43				     ; =========================================================
     44	000A			     output_number:
     45	000A  3D 0000			 cmp ax, 0
     46	000D  7D 0B			 jge output_number_unsigned
     47	000F  F7 2E 0010r		 imul minus
     48	0013  93			 xchg ax, bx
     49	0014  B2 2D			 mov dl, '-'
     50	0016  E8 FFEC			 call output_character
     51	0019  93			 xchg ax, bx
     52	001A			     output_number_unsigned:
     53	001A  BB 0000			 mov bx, 0
     54	001D  B9 0000			 mov cx, 0
     55	0020			     output_number_loop:
     56	0020  3D 0000			 cmp ax, 0
     57	0023  99			 cwd
Turbo Assembler	 Version 2.51	     10/17/19 10:43:09	    Page 2
pr5.ASM



     58	0024  F7 3E 000Er		 idiv base
     59	0028  80 C2 30			 add dl, '0'
     60	002B  52			 push dx
     61	002C  43			 inc bx
     62	002D  3D 0000			 cmp ax, 0
     63	0030  E0 EE			 loopne	output_number_loop
     64	0032  8B CB			 mov cx, bx
     65	0034			     output_stack:
     66	0034  5A			 pop dx
     67	0035  E8 FFCD			 call output_character
     68	0038  E2 FA			 loop output_stack
     69	003A  C3			 ret
     70
     71				     ; =========================================================
     72				     ; Input character procedure
     73				     ; =========================================================
     74	003B			     input_character:
     75	003B  B4 08			 mov ah, 08h
     76	003D  CD 21			     int     21h
     77	003F  C3			 ret
     78
     79				     ; =========================================================
     80				     ; Buffered	input procedure
     81				     ; =========================================================
     82	0040			     input_buffer:
     83	0040  B4 0A			 mov ah, 0Ah
     84	0042  CD 21			     int     21h
     85	0044  C3			 ret
     86
     87				     ; =========================================================
     88				     ; Input number function
     89				     ; =========================================================
     90	0045			     input_number:
     91	0045  BA 0012r			 lea dx, buffer_size
     92	0048  E8 FFF5			 call input_buffer
     93	004B  BF 0014r			 lea di, buffer
     94	004E  B8 0000			 mov ax, 0
     95	0051  BB 0000			 mov bx, 0
     96	0054  B9 0000			 mov cx, 0
     97	0057  8A 0E 0013r		 mov cl, buffer_read
     98	005B  80 3D 2D			 cmp byte ptr [di], '-'
     99	005E  75 0A			 jne input_number_positive
    100	0060  FF 36 0010r		 push minus
    101	0064  47			 inc di
    102	0065  FE C9			 dec cl
    103	0067  EB 0B 90			 jmp input_number_loop
    104	006A			     input_number_positive:
    105	006A  50 55 8B EC C7 46	02+	 push 1
    106	      0001 5D
    107	0074			     input_number_loop:
    108	0074  F7 26 000Er		 mul base
    109	0078  8A 1D			 mov bl, byte ptr [di]
    110	007A  80 EB 30			 sub bl, '0'
    111	007D  03 C3			 add ax, bx
    112	007F  47			 inc di
    113	0080  E2 F2			 loop input_number_loop
    114	0082  99			 cwd
Turbo Assembler	 Version 2.51	     10/17/19 10:43:09	    Page 3
pr5.ASM



    115	0083  5B			 pop bx
    116	0084  F7 EB			 imul bx
    117	0086  C3			 ret
    118
    119				     ; =========================================================
    120				     ; Input data procedure
    121				     ; =========================================================
    122	0087			     input_data:
    123	0087  BA 0002r			 lea dx, n_msg
    124	008A  E8 FF73			 call output_text
    125
    126	008D  BA 0012r			 lea dx, buffer_size
    127	0090  E8 FFB2			 call input_number
    128
    129	0093  A3 0000r			 mov n,	ax
    130
    131	0096  B2 0A			 mov dl, 0Ah
    132	0098  E8 FF6A			 call output_character
    133
    134	009B  A1 0000r			 mov ax, n
    135	009E  C3			 ret
    136
    137				     ; ---------------------------------------------------------
    138				     ; Input point
    139				     ; ---------------------------------------------------------
    140	009F			     start:
    141	009F  E8 0035			 call init
    142
    143	00A2  E8 FFE2			 call input_data
    144
    145	00A5  B9 0000			 mov cx, 0
    146	00A8			     separate_next_digit:
    147	00A8  BA 0000			 mov dx, 0
    148	00AB  F7 36 000Er		 div base
    149	00AF  52			 push dx
    150	00B0  41			 inc cx
    151	00B1  3D 0000			 cmp ax, 0
    152	00B4  75 F2			 jne separate_next_digit
    153
    154	00B6  BB 0000			 mov bx, 0
    155	00B9			     process_next_digit:
    156	00B9  58			 pop ax
    157	00BA  F7 C1 0001		 test cx, 1
    158	00BE  75 02			 jne next_iteration
    159	00C0  03 D8			 add bx, ax
    160
    161	00C2			     next_iteration:
    162	00C2  E2 F5			 loop process_next_digit
    163
    164	00C4  53			 push bx
    165
    166	00C5  BA 0007r			 lea dx, sum_msg
    167	00C8  E8 FF35			 call output_text
    168
    169	00CB  58			 pop ax
    170	00CC  E8 FF3B			 call output_number
    171
Turbo Assembler	 Version 2.51	     10/17/19 10:43:09	    Page 4
pr5.ASM



    172	00CF			     _exit:
    173	00CF  B2 0A			 mov dl, 0Ah
    174	00D1  E8 FF31			 call output_character
    175	00D4  E8 0006			 call exit
    176
    177				     ; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    178				     ; Initialization and exit functions
    179				     ; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    180	00D7			     init:
    181	00D7  B8 0000s			 mov ax, dseg
    182	00DA  8E D8			 mov ds, ax
    183	00DC  C3			 ret
    184
    185	00DD			     exit:
    186	00DD  B4 4C			 mov ah, 4Ch
    187	00DF  CD 21			 int 21h
    188	00E1  C3			 ret
    189
    190	00E2			     cseg ends
    191					 end start
